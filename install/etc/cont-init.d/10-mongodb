#!/usr/bin/with-contenv bash

source /assets/functions/00-container
prepare_service
PROCESS_NAME="mongodb"

mkdir -p /data/db

if var_true $ENABLE_LOGS ; then
    mkdir -p /data/logs
    cat <<EOF > /etc/logrotate.d/mongodb.conf
/data/logs/*.log {
daily
ifempty
rotate 7
missingok
compress
dateext
copytruncate
}
EOF
fi

if [ ! -f "/data/db/.mongodb_init" ]; then
    if [ ! -f "/data/db/.mongodb_password_set" ]; then
        print_notice "Configuring MongoDB Start up Options"
        silent sudo -u mongodb $cmd --logpath /dev/null &

        ### Wait for MongoDB to boot
        COUNTER=1
        while [[ COUNTER -ne 0 ]]; do
            print_notice "Waiting for confirmation of MongoDB service startup"
            sleep 5
            silent mongo admin --eval "help"
            COUNTER=$?
        done
         
        ### Create the admin user 
        print_notice "Creating admin user with a password in MongoDB"
        silent mongo admin --eval "db.createUser({user: '$ADMIN_USER', pwd: '$ADMIN_PASS', roles:[{role:'root',db:'admin'}]});"
        sleep 3
 
        ### If we've defined the DB_NAME environment variable and it's a different database than admin, then create the user for that database.
        if [ "$DB_NAME" != "admin" ]; then
            print_notice "Creating a DB:$DB_NAME user with a password in MongoDB"
            silent mongo admin -u $ADMIN_USER -p $ADMIN_PASS << EOF
use $DB_NAME
db.createUser({user: '$DB_USER', pwd: '$DB_PASS', roles:[{role:'dbOwner',db:'$DB_NAME'}]})
EOF
        fi
 
        sleep 1
        touch /data/db/.mongodb_password_set
        echo "First Initialized on:" `date` >/data/db/.mongodb_init
        echo "Initial Version:" `mongod --version | head -n1 | awk '{print $3}'` > /data/db/.mongodb_init
        silent mongod --shutdown
    fi
fi

chown -R mongodb:mongodb /data/

liftoff
