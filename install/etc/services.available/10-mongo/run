#!/command/with-contenv bash

source /assets/functions/00-container
prepare_service both 10-mongo
PROCESS_NAME=mongo
check_container_initialized
check_service_initialized init

mongocmd="--bind_ip 0.0.0.0 --port ${DB_PORT} --storageEngine ${STORAGE_ENGINE} --timeStampFormat iso8601-local --dbpath ${DATA_PATH}"

if [ "${LOG_TYPE,,}" = "file" ] ; then
    mongocmd="$mongocmd --logpath ${LOG_PATH}/${LOG_FILE} --logappend"
else
    SHOW_OUTPUT=TRUE
fi

if var_true ${ENABLE_AUTHENTICATION} ; then
    mongocmd="$mongocmd --auth"
fi

if var_false ${ENABLE_JOURNALING} ; then
    mongocmd="$mongocmd --nojournal"
fi
if var_true "${ENABLE_REPLICATION}" ; then
    mongocmd="$mongocmd --replSet $REPLICATION_NAME"
fi

if [ -n "${MAX_CONNECTIONS}" ]; then
    mongocmd="$mongocmd --maxConns ${MAX_CONNECTIONS}"
fi

if [ "$OPLOG_SIZE" != "" ]; then
    mongocmd="$mongocmd --oplogSize ${OPLOG_SIZE}"
fi

if [ -n "${ADDITIONAL_PARAMETERS}" ]; then
    mongocmd="$mongocmd $ADDITIONAL_PARAMETERS"
fi

if [ ! -f "${DATA_PATH}"/.mongodb_init ]; then
    if [ ! -f "${DATA_PATH}"/.mongodb_password_set ]; then
        print_notice "Configuring MongoDB Start up Options"
        silent s6-setuidgid mongo mongod ${mongocmd} &

        counter=1
        while [[ counter -ne 0 ]]; do
            print_notice "Waiting for confirmation of MongoDB service startup"
            sleep 5
            silent mongo admin --eval "help"
            counter=$?
        done

        ### Create the admin user
        print_notice "Creating admin user with a password in MongoDB"
        silent mongo admin --eval "db.createUser({user: '${ADMIN_USER}', pwd: '${ADMIN_PASS}', roles:[{role:'root',db:'admin'}]});"
        sleep 3

        ### If we've defined the DB_NAME environment variable and it's a different database than admin, then create the user for that database.
        if [ "${DB_NAME}" != "admin" ]; then
            print_notice "Creating a DB:${DB_NAME} user with a password in MongoDB"
            silent mongo admin -u "${ADMIN_USER}" -p "${ADMIN_PASS}" << EOF
use ${DB_NAME}
db.createUser({user: '${DB_USER}', pwd: '${DB_PASS}', roles:[{role:'dbOwner',db:'${DB_NAME}'}]})
EOF
        fi

        sleep 1
        touch "${DATA_PATH}"/.mongodb_password_set
        echo "First Initialized on:" $(date) > "${DATA_PATH}"/.mongodb_init
        echo "Initial Version:" $(mongod --version | head -n1 | awk '{print $3}') > "${DATA_PATH}"/.mongodb_init
        silent s6-setuidgid mongo mongod --shutdown
    fi
fi

chown -R mongo:mongo "${DATA_PATH}"

print_start "Starting MongoDB ${MONGO_VERSION/r/}"
s6-setuidgid mongo mongod $mongocmd
